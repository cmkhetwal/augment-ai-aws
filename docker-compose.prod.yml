services:
  mongodb:
    image: mongo:7.0
    container_name: pulsestack-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_data:/data/db
    ports:
      - "0.0.0.0:27017:27017"
    networks:
      - monitoring-network
    restart: unless-stopped

  backend:
    image: cmkh/pulsestack:backend
    container_name: pulsestack-backend
    ports:
      - "0.0.0.0:3001:3001"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/aws-monitor?authSource=admin
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - JWT_SECRET=${JWT_SECRET:-change-this-secret-in-production}
      - JWT_EXPIRES_IN=24h
      - BCRYPT_ROUNDS=12
      - MAX_INSTANCES=500
      - MAX_CONCURRENT_REQUESTS=25
      - REQUEST_DELAY=150
      - BATCH_SIZE=50
      - EMAIL_NOTIFICATIONS_ENABLED=false
      - SLACK_NOTIFICATIONS_ENABLED=false
      - GOOGLE_CHAT_NOTIFICATIONS_ENABLED=false
    depends_on:
      - mongodb
    networks:
      - monitoring-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    image: cmkh/pulsestack:frontend
    container_name: pulsestack-frontend
    ports:
      - "0.0.0.0:3000:3000"
    depends_on:
      - backend
    networks:
      - monitoring-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data:

networks:
  monitoring-network:
    driver: bridge